<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Elegant Product Details</title>

    <!-- Modern CSS Libraries -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://unpkg.com/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&family=Roboto:wght@300;400;500&display=swap" rel="stylesheet">

</head>
    <style>
        /* Scope all styles under the product-details-page class */
        .product-details-page {
            --primary-color: #3B82F6;
            --secondary-color: #10B981;
            --text-color: #1F2937;
            --background-color: #F3F4F6;
            padding-top: 110px; /* Account for fixed header */
        }
        
        .product-details-page .product-container {
            background: white;
            border-radius: 1rem;
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            display: flex;
            margin: 0 20px;
        }
        
        .product-details-page .product-container:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.15);
        }
        
        .product-details-page .product-image {
            border-radius: 1rem;
            overflow: hidden;
            position: relative;
            width: 50%;
        }
        
        .product-details-page .product-image img {
            width: 100%;
            height: 500px;
            object-fit: cover;
            transition: transform 0.5s ease;
        }
        
        .product-details-page .product-image:hover img {
            transform: scale(1.1);
        }
        
        .product-details-page .product-details {
            padding: 2rem;
            width: 50%;
        }
        
        .product-details-page .price-tag {
            background-color: var(--primary-color);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 50px;
            font-weight: bold;
            display: inline-block;
        }
        
        .product-details-page .quantity-control {
            display: flex;
            align-items: center;
            gap: 10px;
            margin: 1rem 0;
        }
        
        .product-details-page .quantity-control button {
            width: 30px;
            height: 30px;
            border: 1px solid #ccc;
            background: #fff;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }
        
        .product-details-page .quantity-control input {
            width: 40px;
            text-align: center;
            border: none;
            font-size: 1rem;
            -moz-appearance: textfield;
        }
        
        .product-details-page .quantity-control input::-webkit-outer-spin-button,
        .product-details-page .quantity-control input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        
        .product-details-page .size-selector,
        .product-details-page .color-selector {
            display: flex;
            gap: 0.5rem;
            margin: 1rem 0;
        }
        
        .product-details-page .size-button {
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }
        
        .product-details-page .size-button.selected {
            background-color: var(--primary-color);
            color: white;
        }
        
        .product-details-page .color-button {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            border: 2px solid transparent;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .product-details-page .color-button.selected {
            transform: scale(1.2);
            border: 2px solid #000;
        }
        
        .product-details-page .action-buttons {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }
        
        .product-details-page .action-buttons a {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.75rem 1.5rem;
            border-radius: 50px;
            font-weight: bold;
            text-transform: uppercase;
            transition: all 0.3s ease;
            text-decoration: none;
        }
        
        .product-details-page .action-buttons a.btn-primary {
            background-color: var(--primary-color);
            color: white;
        }
        
        .product-details-page .action-buttons a.btn-secondary {
            background-color: var(--secondary-color);
            color: white;
        }
        
        .product-details-page .review-card {
            background: white;
            border-radius: 1rem;
            padding: 1.5rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }
        
        .product-details-page .star-rating {
            color: #FFC107;
        }
        
        @media (max-width: 768px) {
            .product-details-page .product-container {
                flex-direction: column;
            }
            
            .product-details-page .product-image,
            .product-details-page .product-details {
                width: 100%;
            }
            
            .product-details-page .product-image img {
                height: 300px;
            }
            
            .product-details-page .action-buttons {
                flex-direction: column;
            }
        }
        </style>

    <body class="bg-gray-100">
    <%- include("header.ejs") %>
    <div class="product-details-page">
    <div class="container mx-auto py-10">
        <% if (itemDetails) { %>
            <div class="product-container flex animate__animated animate__fadeIn">
                <!-- Product Image Section -->
                <div class="product-image w-full md:w-1/2">
                    <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            <!-- Main product image -->
                            <div class="carousel-item active">
                                <img src="<%= itemDetails[0].img %>" alt="<%= itemDetails[0].name %>">
                            </div>
                            <!-- Variant images from product_details table -->
                            <% if (itemDetails.variants && itemDetails.variants.length > 0) { %>
                                <% itemDetails.variants.forEach(variant => { %>
                                    <div class="carousel-item">
                                        <img src="<%= variant.img %>" alt="<%= itemDetails[0].name %>">
                                    </div>
                                <% }); %>
                            <% } %>
                        </div>
                        <!-- Carousel Controls -->
                        <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                </div>
    
                <!-- Product Details Section -->
                <div class="product-details w-full md:w-1/2">
                    <h1 class="text-3xl font-bold mb-4"><%= itemDetails[0].name %></h1>
                    <div class="price-tag inline-block mb-4">â‚¹<%= itemDetails[0].price %></div>
                    
                    <!-- Quantity Control -->
                    <div class="quantity-control">
                        <button id="decrement-btn" type="button">-</button>
                        <input type="number" id="quantity-input" value="1" min="1" max="<%= itemDetails[0].quantity %>" readonly>
                        <button id="increment-btn" type="button">+</button>
                    </div>
    
                    <!-- Size Selection -->
                    <div class="mb-4">
                        <h3 class="text-xl font-semibold mb-2">Select Size</h3>
                        <div class="size-selector">
                            <% if (itemDetails.variants && itemDetails.variants.length > 0) { %>
                                <% const uniqueSizes = [...new Set(itemDetails.variants.map(v => v.size))]; %>
                                <% uniqueSizes.forEach(size => { %>
                                    <button class="size-button btn btn-outline-secondary" data-size="<%= size %>">
                                        <%= size %>
                                    </button>
                                <% }); %>
                            <% } else { %>
                                <button class="size-button btn btn-outline-secondary" disabled>No sizes available</button>
                            <% } %>
                        </div>
                    </div>
    
                    <!-- Color Selection -->
                    <div class="mb-4">
                        <h3 class="text-xl font-semibold mb-2">Select Color</h3>
                        <div class="color-selector">
                            <% if (itemDetails.variants && itemDetails.variants.length > 0) { %>
                                <% const uniqueColors = [...new Set(itemDetails.variants.map(v => v.color).filter(Boolean))]; %>
                                <% uniqueColors.forEach(color => { %>
                                    <div class="color-button" style="background-color: <%= color %>;"></div>
                                <% }); %>
                            <% } %>
                        </div>
                    </div>
    
                    <!-- Description -->
                    <div class="mb-4">
                        <h3 class="text-xl font-semibold mb-2">Description</h3>
                        <p class="text-gray-600"><%= itemDetails[0].description %></p>
                    </div>
    
                    <!-- Action Buttons -->
                    <div class="action-buttons">
                        <a href="/AddToCart" class="btn btn-primary addItemsToCart" 
                           data-item-type="<%= itemDetails[0].item_type %>" 
                           data-item-id="<%= itemDetails[0].item_id %>">
                            <i class="fas fa-shopping-cart mr-2"></i>Add to Cart
                        </a>
                        <a href="/CheckOut" class="btn btn-secondary buyNow" 
                           data-item-type="<%= itemDetails[0].item_type %>" 
                           data-item-id="<%= itemDetails[0].item_id %>">
                            <i class="fas fa-credit-card mr-2"></i>Buy Now
                        </a>
                    </div>
                </div>
            </div>
    
            <!-- Customer Reviews Section -->
            <div class="mt-10">
                <% if (itemDetails.customerReviews && itemDetails.customerReviews.length > 0) { %>
                    <h2 class="text-2xl font-bold text-center mb-6">Customer Reviews</h2>
                    <div class="grid md:grid-cols-3 gap-6">
                        <% itemDetails.customerReviews.forEach(review => { %>
                            <div class="review-card animate__animated animate__fadeInUp">
                                <div class="flex items-center mb-4">
                                    <img src="<%= review.img %>" class="rounded-full mr-4" alt="<%= review.name %>">
                                    <div>
                                        <h4 class="font-semibold"><%= review.name %></h4>
                                        <div class="star-rating">
                                            <% for(let i = 0; i < review.rating; i++) { %>
                                                <i class="fas fa-star"></i>
                                            <% } %>
                                            <% for(let i = review.rating; i < 5; i++) { %>
                                                <i class="far fa-star"></i>
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                                <p class="text-gray-600">"<%= review.comment %>"</p>
                            </div>
                        <% }); %>
                    </div>
                <% } %>
            </div>
        <% } else { %>
            <p class="text-center text-muted">No product details available.</p>
        <% } %>
    </div>
        <!-- Toast Notifications -->
        <div id="toast-container" class="position-fixed bottom-0 end-0 p-3">
            <!-- Success Toast -->
            <div id="toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header">
                    <strong class="me-auto">Success</strong>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    Item successfully added to cart!
                </div>
            </div>
            <!-- Login Required Toast -->
            <div id="toast-login" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header bg-warning text-dark">
                    <strong class="me-auto">Login Required</strong>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body text-dark">
                    Please log in to continue.
                </div>
            </div>
        </div>
    </div>	
    <!-- JavaScript Libraries -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Interactive color and size selection
        document.querySelectorAll('.size-button').forEach(button => {
            button.addEventListener('click', function() {
                document.querySelectorAll('.size-button').forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
            });
        });

        document.querySelectorAll('.color-button').forEach(button => {
            button.addEventListener('click', function() {
                document.querySelectorAll('.color-button').forEach(btn => btn.style.border = 'none');
                this.style.border = '2px solid var(--primary-color)';
            });
        });
    </script>


    <!-- below script is for Check out button and also handles when the user is not logged in -->
<!-- <script>
    document.addEventListener("DOMContentLoaded", () => {
        const checkoutButton = document.querySelectorAll(".buyNow");
    
        checkoutButton.forEach(button => {
            button.addEventListener("click", async (event) => {
                event.preventDefault();
    
                // Retrieve all necessary details
                const item_id = button.getAttribute("data-item-id");
                const item_type = button.getAttribute("data-item-type");
                const quantity = document.getElementById("quantity-input").value;
                
                // Get selected size
                const selectedSizeElement = document.querySelector('.size-button.active');
                const size = selectedSizeElement ? selectedSizeElement.getAttribute('data-size') : null;
                
                // Get selected color
                const selectedColorElement = document.querySelector('.color-button[style*="border: 2px solid"]');
                const color = selectedColorElement ? selectedColorElement.style.backgroundColor : null;
    
                try {
                    const response = await fetch("/CheckOut", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ 
                            item_id, 
                            item_type, 
                            quantity,
                            size,      // Add size
                            color      // Add color
                        }),
                    });
                    
                    // Rest of the existing checkout logic remains the same
                    // ...
                } catch (error) {
                    console.log("Checkout failed", error);
                }
            });
        });
    });
    </script> -->
    
    <script>
    document.addEventListener("DOMContentLoaded", () => {
        const cartButtons = document.querySelectorAll(".addItemsToCart, .buyNow");
        
        cartButtons.forEach(button => {
            button.addEventListener("click", async (event) => {
                event.preventDefault();
                
                // Validation
                const selectedSizeElement = document.querySelector('.size-button.active');
                const selectedColorElement = document.querySelector('.color-button[style*="border: 2px solid"]');
                const quantityInput = document.getElementById("quantity-input");
                
                if (!selectedSizeElement) {
                    alert("Please select a size");
                    return;
                }
                
                // if (!selectedColorElement) {
                //     alert("Please select a color");
                //     return;
                // }
                
                const payload = {
                    item_id: button.getAttribute("data-item-id"),
                    item_type: button.getAttribute("data-item-type"),
                    quantity: quantityInput.value,
                    size: selectedSizeElement.getAttribute('data-size'),
                    color: selectedColorElement.style.backgroundColor
                };
                
                const endpoint = button.classList.contains('addItemsToCart') ? "/AddToCart" : "/CheckOut";
                
                try {
                    const response = await fetch(endpoint, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(payload)
                    });
                    
                    const data = await response.json();
                    
                    if (response.status === 401) {
                        const loginToast = new bootstrap.Toast(document.getElementById('toast-login'));
                        loginToast.show();
                    } else if (data.success) {
                        if (endpoint === "/AddToCart") {
                            const successToast = new bootstrap.Toast(document.getElementById('toast'));
                            successToast.show();
                        } else {
                            window.location.href = `/checkOutPage?item_id=${payload.item_id}&item_type=${payload.item_type}&quantity=${payload.quantity}`;
                        }
                    } else {
                        console.error("Operation failed:", data.message);
                    }
                } catch (error) {
                    console.error("Request failed:", error);
                }
            });
        });
    });
    </script>
 
<!-- This below script is for everything -->
 <script>
    document.addEventListener("DOMContentLoaded", () => {
    // Quantity control functionality
    const quantityInput = document.getElementById("quantity-input");
    const decrementBtn = document.getElementById("decrement-btn");
    const incrementBtn = document.getElementById("increment-btn");
    
    if (decrementBtn && incrementBtn && quantityInput) {
        decrementBtn.addEventListener("click", () => {
            const currentValue = parseInt(quantityInput.value);
            if (currentValue > 1) {
                quantityInput.value = currentValue - 1;
            }
        });

        incrementBtn.addEventListener("click", () => {
            const currentValue = parseInt(quantityInput.value);
            const maxQuantity = parseInt(quantityInput.getAttribute("max"));
            if (currentValue < maxQuantity) {
                quantityInput.value = currentValue + 1;
            }
        });

        // Ensure direct input stays within bounds
        quantityInput.addEventListener("change", () => {
            const value = parseInt(quantityInput.value);
            const max = parseInt(quantityInput.getAttribute("max"));
            if (value < 1) quantityInput.value = 1;
            if (value > max) quantityInput.value = max;
        });
    }

    // Size selection functionality
    const sizeButtons = document.querySelectorAll(".size-button");
    sizeButtons.forEach(button => {
        button.addEventListener("click", () => {
            if (!button.disabled) {
                sizeButtons.forEach(b => b.classList.remove("selected"));
                button.classList.add("selected");
            }
        });
    });

    // Color selection functionality
    const colorButtons = document.querySelectorAll(".color-button");
    colorButtons.forEach(button => {
        button.addEventListener("click", () => {
            colorButtons.forEach(b => b.classList.remove("selected"));
            button.classList.add("selected");
        });
    });

    // Add to Cart functionality
    const addToCartButton = document.querySelector(".addItemsToCart");
    if (addToCartButton) {
        addToCartButton.addEventListener("click", async (event) => {
            event.preventDefault();

            // Get selected options
            const item_id = addToCartButton.getAttribute("data-item-id");
            const item_type = addToCartButton.getAttribute("data-item-type");
            const quantity = document.getElementById("quantity-input").value;
            const selectedSize = document.querySelector(".size-button.selected");
            const selectedColor = document.querySelector(".color-button.selected");

            // Get size and color values
            const size = selectedSize ? selectedSize.getAttribute("data-size") : "M";
            const color = selectedColor ? 
                         window.getComputedStyle(selectedColor).backgroundColor : 
                         "#0000FF";

            try {
                const response = await fetch("/AddToCart", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        item_id,
                        item_type,
                        quantity,
                        size,
                        color,
                    }),
                });

                const data = await response.json();

                if (response.status === 401) {
                    // Show login required toast
                    const loginToast = new bootstrap.Toast(
                        document.getElementById("toast-login")
                    );
                    loginToast.show();
                } else if (data.success) {
                    // Show success toast
                    const successToast = new bootstrap.Toast(
                        document.getElementById("toast")
                    );
                    successToast.show();
                } else {
                    console.error("Unexpected response:", data);
                }
            } catch (error) {
                console.error("Failed to add item to cart:", error);
            }
        });
    }

    // Initialize carousel if it exists
    const carousel = document.getElementById('productCarousel');
    if (carousel) {
        new bootstrap.Carousel(carousel, {
            interval: 3000, // Change slides every 3 seconds
            wrap: true     // Continue from last to first slide
        });
    }
});
  </script>

    
</body>
</html>