<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <title>Document</title>
</head>
<body class="bg-body-tertiary">
    <svg xmlns="http://www.w3.org/2000/svg" class="d-none">
      <symbol id="check2" viewBox="0 0 16 16">
        <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z"></path>
      </symbol>
      <symbol id="circle-half" viewBox="0 0 16 16">
        <path d="M8 15A7 7 0 1 0 8 1v14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z"></path>
      </symbol>
      <symbol id="moon-stars-fill" viewBox="0 0 16 16">
        <path d="M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z"></path>
        <path d="M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.097-1.097l.387-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.863.1z"></path>
      </symbol>
      <symbol id="sun-fill" viewBox="0 0 16 16">
        <path d="M8 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z"></path>
      </symbol>
    </svg>

    <div class="dropdown position-fixed bottom-0 end-0 mb-3 me-3 bd-mode-toggle">
      <button class="btn btn-bd-primary py-2 dropdown-toggle d-flex align-items-center" id="bd-theme" type="button" aria-expanded="false" data-bs-toggle="dropdown" aria-label="Toggle theme (dark)">
        <svg class="bi my-1 theme-icon-active" width="1em" height="1em"><use href="#moon-stars-fill"></use></svg>
        <span class="visually-hidden" id="bd-theme-text">Toggle theme</span>
      </button>
      <ul class="dropdown-menu dropdown-menu-end shadow" aria-labelledby="bd-theme-text">
        <li>
          <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="light" aria-pressed="false">
            <svg class="bi me-2 opacity-50" width="1em" height="1em"><use href="#sun-fill"></use></svg>
            Light
            <svg class="bi ms-auto d-none" width="1em" height="1em"><use href="#check2"></use></svg>
          </button>
        </li>
        <li>
          <button type="button" class="dropdown-item d-flex align-items-center active" data-bs-theme-value="dark" aria-pressed="true">
            <svg class="bi me-2 opacity-50" width="1em" height="1em"><use href="#moon-stars-fill"></use></svg>
            Dark
            <svg class="bi ms-auto d-none" width="1em" height="1em"><use href="#check2"></use></svg>
          </button>
        </li>
        <li>
          <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="auto" aria-pressed="false">
            <svg class="bi me-2 opacity-50" width="1em" height="1em"><use href="#circle-half"></use></svg>
            Auto
            <svg class="bi ms-auto d-none" width="1em" height="1em"><use href="#check2"></use></svg>
          </button>
        </li>
      </ul>
    </div>

    
<div class="container">
  <% if(items_data && items_data.length > 0 && UserSelectedItems > 0) { %>
    <% items_data.forEach((item) => { %>
  <main>
    <div class="py-5 text-center">
      <img class="d-block mx-auto mb-4" src="/icons/VSA_logo.png" alt="" width="72" height="57">
      <h2>Checkout form</h2>
      <p class="lead">Lorem ipsum dolor sit amet consectetur adipisicing elit. Illum necessitatibus reprehenderit dignissimos repellat vero ducimus? Repellendus minus nihil recusandae illum reiciendis, possimus eveniet iure odio officiis iste numquam animi est?</p>
    </div>

    <div class="row g-5">
      <div class="col-md-5 col-lg-4 order-md-last">
        <h4 class="d-flex justify-content-between align-items-center mb-3">
          <span class="text-primary">Your cart</span>
          <span class="badge bg-primary rounded-pill"><%=UserSelectedItems%></span>
        </h4>
        <ul class="list-group mb-3">
          <li class="list-group-item d-flex justify-content-between lh-sm">
            <div>
              <h6 class="my-0"><%=item.name%> + <%=UserSelectedItems%></h6>
              <small class="text-body-secondary">Brief description</small>
            </div>
            <span class="text-body-secondary">₹<%=item.price%></span>
          </li>
          <li class="list-group-item d-flex justify-content-between lh-sm">
            <div>
              <h6 class="my-0">Second product</h6>
              <small class="text-body-secondary">Brief description</small>
            </div>
            <span class="text-body-secondary">₹8</span>
          </li>
          <li class="list-group-item d-flex justify-content-between lh-sm">
            <div>
              <h6 class="my-0">Third item</h6>
              <small class="text-body-secondary">Brief description</small>
            </div>
            <span class="text-body-secondary">₹5</span>
          </li>
          <li class="list-group-item d-flex justify-content-between bg-body-tertiary">
            <div class="text-success">
              <h6 class="my-0">Promo code</h6>
              <small>EXAMPLECODE</small>
            </div>
            <span class="text-success">−₹5</span>
          </li>
          <li class="list-group-item d-flex justify-content-between">
            <span>Total (INR)</span>
            <strong>₹</strong>
          </li>
        </ul>

        <form class="card p-2">
          <div class="input-group">
            <input type="text" class="form-control" placeholder="Promo code">
            <button type="submit" class="btn btn-secondary">Redeem</button>
          </div>
        </form>
      </div>
      <div class="col-md-7 col-lg-8">
        <h4 class="mb-3">Billing address</h4>
        <form class="needs-validation" novalidate="">
          <div class="row g-3">
            <div class="col-sm-6">
              <label for="firstName" class="form-label">First name</label>
              <input type="text" class="form-control" id="firstName" placeholder="" value="" required="">
              <div class="invalid-feedback">
                Valid first name is required.
              </div>
            </div>

            <div class="col-sm-6">
              <label for="lastName" class="form-label">Last name</label>
              <input type="text" class="form-control" id="lastName" placeholder="" value="" required="">
              <div class="invalid-feedback">
                Valid last name is required.
              </div>
            </div>

            <div class="col-12">
              <label for="username" class="form-label">Username</label>
              <div class="input-group has-validation">
                <span class="input-group-text">@</span>
                <input type="text" class="form-control" id="username" placeholder="Username" required="">
              <div class="invalid-feedback">
                  Your username is required.
                </div>
              </div>
            </div>

            <div class="col-12">
              <label for="email" class="form-label">Email <span class="text-body-secondary">(Optional)</span></label>
              <input type="email" class="form-control" id="email" placeholder="you@example.com">
              <div class="invalid-feedback">
                Please enter a valid email address for shipping updates.
              </div>
            </div>

            <div class="col-12">
              <label for="address" class="form-label">Address</label>
              <input type="text" class="form-control" id="address" placeholder="1234 Main St" required="">
              <div class="invalid-feedback">
                Please enter your shipping address.
              </div>
            </div>

            <div class="col-12">
              <label for="address2" class="form-label">Address 2 <span class="text-body-secondary">(Optional)</span></label>
              <input type="text" class="form-control" id="address2" placeholder="Apartment or suite">
            </div>

            <div class="col-md-5">
              <label for="country" class="form-label">Country</label>
              <select class="form-select" id="country" required="">
                <option value="">Choose...</option>
                <option>United States</option>
              </select>
              <div class="invalid-feedback">
                Please select a valid country.
              </div>
            </div>

            <div class="col-md-4">
              <label for="state" class="form-label">State</label>
              <select class="form-select" id="state" required="">
                <option value="">Choose...</option>
                <option>California</option>
              </select>
              <div class="invalid-feedback">
                Please provide a valid state.
              </div>
            </div>

            <div class="col-md-3">
              <label for="zip" class="form-label">Zip</label>
              <input type="text" class="form-control" id="zip" placeholder="" required="">
              <div class="invalid-feedback">
                Zip code required.
              </div>
            </div>
          </div>

          <hr class="my-4">

          <div class="form-check">
            <input type="checkbox" class="form-check-input" id="same-address">
            <label class="form-check-label" for="same-address">Shipping address is the same as my billing address</label>
          </div>

          <div class="form-check">
            <input type="checkbox" class="form-check-input" id="save-info">
            <label class="form-check-label" for="save-info">Save this information for next time</label>
          </div>

          <hr class="my-4">

          <h4 class="mb-3">Payment</h4>

          <div class="my-3">
            <div class="form-check">
              <input id="credit" name="paymentMethod" type="radio" class="form-check-input" checked="" required="">
              <label class="form-check-label" for="credit">Credit card</label>
            </div>
            <div class="form-check">
              <input id="debit" name="paymentMethod" type="radio" class="form-check-input" required="">
              <label class="form-check-label" for="debit">Debit card</label>
            </div>
            <div class="form-check">
              <input id="paypal" name="paymentMethod" type="radio" class="form-check-input" required="">
              <label class="form-check-label" for="paypal">PayPal</label>
            </div>
          </div>

          <div class="row gy-3">
            <div class="col-md-6">
              <label for="cc-name" class="form-label">Name on card</label>
              <input type="text" class="form-control" id="cc-name" placeholder="" required="">
              <small class="text-body-secondary">Full name as displayed on card</small>
              <div class="invalid-feedback">
                Name on card is required
              </div>
            </div>

            <div class="col-md-6">
              <label for="cc-number" class="form-label">Credit card number</label>
              <input type="text" class="form-control" id="cc-number" placeholder="" required="">
              <div class="invalid-feedback">
                Credit card number is required
              </div>
            </div>

            <div class="col-md-3">
              <label for="cc-expiration" class="form-label">Expiration</label>
              <input type="text" class="form-control" id="cc-expiration" placeholder="" required="">
              <div class="invalid-feedback">
                Expiration date required
              </div>
            </div>

            <div class="col-md-3">
              <label for="cc-cvv" class="form-label">CVV</label>
              <input type="text" class="form-control" id="cc-cvv" placeholder="" required="">
              <div class="invalid-feedback">
                Security code required
              </div>
            </div>
          </div>

          <hr class="my-4">
          <a href="/Buy_Now" class="btn btn-primary buyNow w-100 btn-lg" data-item-type="<%= item.item_type %>" data-item-id="<%= item.item_id %>">Buy</a>                                 
        </form>
      </div>
    </div>
  </main>
<%})%>
<%}%>
  <footer class="my-5 pt-5 text-body-secondary text-center text-small">
    <p class="mb-1">© 2017–2024 Company Name</p>
    <ul class="list-inline">
      <li class="list-inline-item"><a href="#">Privacy</a></li>
      <li class="list-inline-item"><a href="#">Terms</a></li>
      <li class="list-inline-item"><a href="#">Support</a></li>
    </ul>
  </footer>
</div>
<script src="/docs/5.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <!-- <script>
      document.addEventListener("DOMContentLoaded", () => {
          const buyButton = document.querySelectorAll(".buyNow");        
          buyButton.forEach(button => {
              button.addEventListener("click", async (event) => {
                  event.preventDefault();
                  const item_type = button.getAttribute("data-item-type");
                  const item_id = button.getAttribute("data-item-id");
                  const quantity = button.closest(".card").querySelector("#quantity-input").value;
  
                  try {
                      const response = await fetch("/Buy_Now", {
                          method: "post",
                          headers: {
                              'Content-Type': 'application/json',
                          },
                          body: JSON.stringify({ item_id, item_type, quantity }),
                      });
  
                      const data = await response.json();
  
                      const options = {
                          "key": "YOUR_RAZORPAY_KEY_ID",
                          "amount": data.amount,
                          "currency": data.currency,
                          "name": "Vaibhav Skating Academy",
                          "description": "Test Transaction",
                          "image": "/icons/VSA_logo.png",
                          "order_id": data.id,
                          "handler": async function (response) {
                              const paymentResponse = await fetch('/payment_success', {
                                  method: 'POST',
                                  headers: {
                                      'Content-Type': 'application/json'
                                  },
                                  body: JSON.stringify(response)
                              });
  
                              const paymentData = await paymentResponse.json();
  
                              if (paymentData.success) {
                                  window.location.href = "/Buy_Now";
                              } else {
                                  alert('Payment failed. Please try again.');
                              }
                          },
                          "prefill": {
                              "name": data.full_name,
                              "email": data.email,
                              "contact": data.mobile_number
                          },
                          "notes": {
                              "address": data.address
                          },
                          "theme": {
                              "color": "#3399cc"
                          }
                      };
  
                      const rzp1 = new Razorpay(options);
                      rzp1.open();
  
                  } catch (error) {
                      console.log("Could not buy item", error);
                  }
              });
          });          
      });
    </script> -->
    <script>
      document.addEventListener("DOMContentLoaded", () => {
          // Configuration
          const RAZORPAY_KEY = process.env.RAZORPAY_KEY_ID || "YOUR_RAZORPAY_KEY_ID";
          const COMPANY_NAME = "Vaibhav Skating Academy";
          const COMPANY_LOGO = "/icons/VSA_logo.png";
          const SUCCESS_REDIRECT = "/orders"; // Changed from /Buy_Now to a more appropriate route
      
          // Utility functions
          const validateQuantity = (value) => {
              const quantity = parseInt(value);
              if (isNaN(quantity) || quantity <= 0) {
                  throw new Error("Please enter a valid quantity greater than 0");
              }
              return quantity;
          };
      
          const showError = (message) => {
              // You can replace this with a better UI notification system
              alert(message);
          };
      
          const disableButton = (button, disabled = true) => {
              button.disabled = disabled;
              button.style.opacity = disabled ? "0.5" : "1";
              button.style.cursor = disabled ? "not-allowed" : "pointer";
          };
      
          // Initialize Razorpay buttons
          const buyButtons = document.querySelectorAll(".buyNow");
          
          buyButtons.forEach(button => {
              button.addEventListener("click", async (event) => {
                  event.preventDefault();
                  
                  // Disable button to prevent double submissions
                  disableButton(button, true);
                  
                  try {
                      // Get and validate input data
                      const item_type = button.getAttribute("data-item-type");
                      const item_id = button.getAttribute("data-item-id");
                      const quantityInput = button.closest(".card").querySelector("#quantity-input");
                      
                      if (!item_type || !item_id) {
                          throw new Error("Invalid product information");
                      }
      
                      const quantity = validateQuantity(quantityInput.value);
      
                      // Create order on server
                      const response = await fetch("/Buy_Now", {
                          method: "POST",
                          headers: {
                              'Content-Type': 'application/json',                              
                          },
                          body: JSON.stringify({ 
                              item_id, 
                              item_type, 
                              quantity 
                          }),
                      });
      
                      if (!response.ok) {
                          const errorData = await response.json();
                          throw new Error(errorData.error || 'Failed to create order');
                      }
      
                      const data = await response.json();
      
                      // Configure Razorpay options
                      const options = {
                          key: RAZORPAY_KEY,
                          amount: data.amount,
                          currency: data.currency,
                          name: COMPANY_NAME,
                          description: `Order #${data.id}`,
                          image: COMPANY_LOGO,
                          order_id: data.id,
                          prefill: {
                              name: data.full_name,
                              email: data.email,
                              contact: data.mobile_number
                          },
                          notes: {
                              address: data.address
                          },
                          theme: {
                              color: "#3399cc"
                          },
                          handler: async function(response) {
                              try {
                                  // Verify payment on server
                                  const paymentResponse = await fetch('/payment_success', {
                                      method: 'POST',
                                      headers: {
                                          'Content-Type': 'application/json'
                                          
                                      },
                                      body: JSON.stringify({
                                          razorpay_payment_id: response.razorpay_payment_id,
                                          razorpay_order_id: response.razorpay_order_id,
                                          razorpay_signature: response.razorpay_signature
                                      })
                                  });
      
                                  const paymentData = await paymentResponse.json();
      
                                  if (paymentData.success) {
                                      // Show success message before redirect
                                      // alert('Payment successful! Redirecting to orders page...');
                                      window.location.href = SUCCESS_REDIRECT;
                                  } else {
                                      throw new Error(paymentData.error || 'Payment verification failed');
                                  }
                              } catch (error) {
                                  showError(`Payment verification failed: ${error.message}`);
                              }
                          },
                          modal: {
                              ondismiss: function() {
                                  // Re-enable button if payment modal is closed
                                  disableButton(button, false);
                              }
                          }
                      };
      
                      // Initialize and open Razorpay
                      const rzp1 = new Razorpay(options);
                      rzp1.on('payment.failed', function(response) {
                          showError(`Payment failed: ${response.error.description}`);
                          disableButton(button, false);
                      });
                      rzp1.open();
      
                  } catch (error) {
                      console.error("Purchase error:", error);
                      showError(`Error: ${error.message}`);
                      disableButton(button, false);
                  }
              });
          });
      });
      </script>
</body>
</html>