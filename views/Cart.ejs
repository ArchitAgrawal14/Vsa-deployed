<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
    rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
    crossorigin="anonymous"
  />
  <title>Cart</title>

<style>
/* Main cart page container */
.cart-page {
    padding-top: 100px; /* Adds space for fixed header */
    min-height: 100vh;
    position: relative;
    z-index: 1; /* Ensures content is above header's box-shadow */
}

/* Cart-specific container styles */
.cart-page .size-selector,
.cart-page .color-selector {
    display: flex;
    gap: 0.5rem;
}

.cart-page .size-button,
.cart-page .color-button {
    border: 2px solid transparent;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
}

.cart-page .size-button:hover,
.cart-page .color-button:hover {
    border-color: var(--primary-color);
}

.cart-page .color-button {
    width: 30px;
    height: 30px;
    border-radius: 50%;
}

/* Cart item styles */
.cart-page .card {
    background: #fff;
    transition: opacity 0.5s ease, transform 0.5s ease;
    position: relative;
    z-index: 2;
}

.cart-page .card-img-top {
    max-height: 200px;
    object-fit: cover;
}

/* Quantity input group styles */
.cart-page .input-group {
    width: 120px;
    margin: 0 auto;
}

.cart-page .input-group-prepend,
.cart-page .input-group-append {
    display: flex;
}

.cart-page .input-group .btn {
    padding: 0.375rem 0.75rem;
}

.cart-page .form-control {
    text-align: center;
    border: 1px solid #ced4da;
}

/* Cart action buttons */
.cart-page .button-container {
    text-align: center;
    margin-top: 1rem;
}

.cart-page .btn.buyNow,
.cart-page .btn.removeItemsFromCart {
    background-color: var(--primary-color);
    border: none;
    color: white;
    font-size: 1rem;
    padding: 10px 15px;
    border-radius: 30px;
    text-transform: uppercase;
    font-weight: bold;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    display: inline-block;
    margin: 5px;
    min-width: 120px;
}

.cart-page .btn.buyNow:hover,
.cart-page .btn.removeItemsFromCart:hover {
    background-color: var(--secondary-color);
    transform: translateY(-2px);
}

.cart-page .btn.buyNow:active,
.cart-page .btn.removeItemsFromCart:active {
    background-color: var(--secondary-color);
    transform: translateY(1px);
}

/* Empty cart shop button */
.cart-page .shop-button-container {
    display: flex;
    justify-content: center;
    margin-top: 20px;
    padding: 2rem;
}

.cart-page .shop-button {
    padding: 10px 20px;
    background-color: var(--primary-color);
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.cart-page .shop-button:hover {
    background-color: var(--secondary-color);
    transform: translateY(-2px);
}

/* Toast notifications */
.cart-page .toast {
    position: fixed;
    top: 80px; /* Below header */
    right: 20px;
    z-index: 1050;
    background-color: var(--primary-color);
    color: white;
}

.cart-page .toast-header {
    background-color: var(--secondary-color);
    color: white;
}


/* Responsive adjustments */
@media (max-width: 768px) {
    .cart-page {
        padding-top: 80px;
    }
    
    .cart-page .card {
        width: 90% !important;
        margin: 1rem auto !important;
    }
    
    .cart-page .button-container {
        flex-direction: column;
        gap: 0.5rem;
    }
}
/* Default cart page styles */
.cart-page {
    padding-top: 100px; /* Space for fixed header */
    min-height: 100vh;
    position: relative;
    z-index: 1;
}

/* Ensuring all items align properly */
.cart-page .container {
    max-width: 1200px;
    margin: auto;
    padding: 0 15px;
}

/* Card container */
.cart-page .card {
    width: 100%;
    background: #fff;
    transition: opacity 0.5s ease, transform 0.5s ease;
    position: relative;
    z-index: 2;
    padding: 15px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Product image */
.cart-page .card-img-top {
    max-height: 200px;
    object-fit: contain;
    width: 100%;
    padding: 10px;
}

/* Quantity controls */
.cart-page .input-group {
    max-width: 140px;
    margin: auto;
}

.cart-page .input-group .btn {
    padding: 6px 12px;
    font-size: 1rem;
}

/* Size and Color Selectors */
.cart-page .size-selector,
.cart-page .color-selector {
    display: flex;
    gap: 0.5rem;
    justify-content: center;
}

.cart-page .size-button,
.cart-page .color-button {
    border: 2px solid transparent;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
}

.cart-page .size-button:hover,
.cart-page .color-button:hover {
    border-color: var(--primary-color);
}

.cart-page .color-button {
    width: 30px;
    height: 30px;
    border-radius: 50%;
}

/* Buttons */
.cart-page .button-container {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 1rem;
    flex-wrap: wrap;
}

.cart-page .btn.buyNow,
.cart-page .btn.removeItemsFromCart {
    background-color: var(--primary-color);
    border: none;
    color: white;
    font-size: 1rem;
    padding: 10px 15px;
    border-radius: 30px;
    text-transform: uppercase;
    font-weight: bold;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    display: inline-block;
    min-width: 140px;
}

.cart-page .btn.buyNow:hover,
.cart-page .btn.removeItemsFromCart:hover {
    background-color: var(--secondary-color);
    transform: translateY(-2px);
}

/* Shop button */
.cart-page .shop-button-container {
    display: flex;
    justify-content: center;
    margin-top: 20px;
    padding: 2rem;
}

.cart-page .shop-button {
    padding: 12px 24px;
    font-size: 1rem;
    background-color: var(--primary-color);
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.cart-page .shop-button:hover {
    background-color: var(--secondary-color);
    transform: translateY(-2px);
}

/* Responsive Adjustments */

/* Small screens (phones) */
@media (max-width: 576px) {
    .cart-page {
        padding-top: 70px;
    }

    .cart-page .container {
        padding: 0 10px;
    }

    .cart-page .row {
        flex-direction: column;
        align-items: center;
    }

    .cart-page .card {
        width: 100%;
        margin: 10px 0;
    }

    .cart-page .button-container {
        flex-direction: column;
        align-items: center;
    }

    .cart-page .btn.buyNow,
    .cart-page .btn.removeItemsFromCart {
        width: 90%;
        font-size: 0.9rem;
    }
}

/* Tablets (medium screens) */
@media (max-width: 768px) {
    .cart-page {
        padding-top: 80px;
    }

    .cart-page .container {
        padding: 0 10px;
    }

    .cart-page .card {
        width: 100%;
        margin: 15px auto;
    }

    .cart-page .input-group {
        width: 110px;
    }

    .cart-page .button-container {
        flex-direction: column;
        gap: 0.5rem;
        align-items: center;
    }

    .cart-page .btn.buyNow,
    .cart-page .btn.removeItemsFromCart {
        width: 90%;
        font-size: 1rem;
    }
}

/* Laptops (large screens) */
@media (max-width: 992px) {
    .cart-page .container {
        max-width: 90%;
    }

    .cart-page .card {
        width: 100%;
    }

    .cart-page .input-group {
        width: 120px;
    }

    .cart-page .button-container {
        justify-content: center;
    }
}

/* Extra large devices (desktops) */
@media (min-width: 1200px) {
    .cart-page .container {
        max-width: 80%;
    }

    .cart-page .button-container {
        justify-content: flex-start;
    }
}
/* Default card styles */
.cart-page .card {
    width: 100%;
    max-width: 320px;  /* Restricts card size */
    margin: auto;
    background: #fff;
    transition: opacity 0.5s ease, transform 0.5s ease;
    position: relative;
    z-index: 2;
    padding: 15px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Make images responsive */
.cart-page .card-img-top {
    width: 100%;
    height: auto;
    max-height: 180px;  /* Prevents oversized images */
    object-fit: contain; /* Maintains aspect ratio */
    padding: 10px;
}

/* Adjust input width */
.cart-page .input-group {
    max-width: 120px;
    margin: auto;
}

/* Ensure proper card layout */
.cart-page .col-12 {
    display: flex;
    justify-content: center;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    .cart-page .row {
        flex-direction: column;
        align-items: center;
    }

    .cart-page .card {
        width: 90%;
        max-width: 300px;
    }
}

@media (max-width: 576px) {
    .cart-page .card {
        width: 100%;
        max-width: 280px;
    }
}

</style>
</head>
<body>
  <%- include("header.ejs") %>
  <div class="cart-page">    
  <% if (Addeditem && Addeditem.length > 0) { %>
    <div class="container">
      <div class="row">
    <% Addeditem.forEach((addItem) => { %>      
      <div class="col-12 col-md-6 col-lg-4">
        <div class="row d-flex justify-content-around">
          <div class="card m-5 border-0" style="width: 12rem">
            <img
              src="<%= addItem.img %>"
              class="card-img-top"
              alt="An inline Skate"
            />
            <div class="card-body">
              <h5 class="card-title"><%= addItem.name %></h5>
              <h4 class="card-title"><%= addItem.price %></h4>
              <div class="input-group mb-3">
                <div class="input-group-prepend">
                  <button class="btn btn-outline-secondary" type="button" id="decrement-btn">-</button>
                </div>
                <input type="text" class="form-control text-center" id="quantity-input" value="<%=addItem.quantity%>">
                <div class="input-group-append">
                  <button class="btn btn-outline-secondary" type="button" id="increment-btn">+</button>
                </div>
              </div>
              
              <div class="mb-4">
                <div class="size-selector">
                    <button class="size-button btn btn-outline-secondary" data-size="<%= addItem.size %>" readonly><%= addItem.size %></button>
                    <!-- <h3 class="text-xl font-semibold mb-2">Select Color</h3> -->
                <div class="color-selector">
                  <div class="color-button" style="background-color: <%=addItem.color%>;"></div>
              </div>
                </div>
                <br>
                
            </div>
              <div class="button-container">
              <a
                href="/Buy_Now"
                class="btn btn-primary buyNow"
                data-item-type="<%= addItem.item_type %>"
                data-item-id="<%= addItem.item_id %>"
              >Buy Now</a>
              <a
                href="/removeItemFromCart"
                class="btn btn-primary removeItemsFromCart"
                data-item-type="<%= addItem.item_type %>"
                data-item-id="<%= addItem.item_id %>"
              >Remove</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <% }); %>
  </div>
</div>
  <% } else { %>
   <div class="shop-button-container">
        <form action="/Shop" method="GET">
          <button type="submit" class="shop-button">Go to Shop</button>
        </form>
      </div>
      <% } %>
</div>

  <%- include('footer.ejs') %>
  
  <!-- Below script is for handling remove and buy now button  -->
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const buyButton = document.querySelectorAll(".buyNow");
      const removeItemFromCart = document.querySelectorAll(".removeItemsFromCart");

      removeItemFromCart.forEach((button) => {
    button.addEventListener("click", (event) => {
      event.preventDefault(); // Prevent default action if needed
      const item_id = button.getAttribute("data-item-id");
      const item_type = button.getAttribute("data-item-type");
      fetch("/removeItemFromCart", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ item_id, item_type }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            console.log("Item successfully removed from the cart");
            // Reload the cart page
            window.location.reload();
          } else {
            console.log("Failed to remove item from cart", data.error);
          }
        })
        .catch((error) => {
          console.log("Failed to remove item from cart", error);
        });
    });
  });

      buyButton.forEach(button => {
        button.addEventListener("click", (event) => {
          event.preventDefault();
          const item_type = button.getAttribute("data-item-type");
          const item_id = button.getAttribute("data-item-id");
          const quantity =  button.closest(".card").querySelector("#quantity-input").value;
          fetch("/Buy_Now", {
            method: "post",
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ item_id: item_id, item_type: item_type ,quantity:quantity}),
          })
          .then(response => response.json())
          .then(data => {
            console.log('Success', data);
            // Redirect to another page if needed
          })
          .catch((error) => {
            console.log("Could not buy item", error);
          });
        });
      });
    });
  </script>
  <!-- yaha pe quantity ka hai. -->
  <script>
     document.addEventListener('DOMContentLoaded', function() {
    const decrementButton = document.getElementById('decrement-btn');
    const incrementButton = document.getElementById('increment-btn');
    const quantityInput = document.getElementById('quantity-input');

    decrementButton.addEventListener('click', function() {
      let currentValue = parseInt(quantityInput.value);
      if (currentValue > 1) {
        quantityInput.value = currentValue - 1;
      }
    });

    incrementButton.addEventListener('click', function() {
      let currentValue = parseInt(quantityInput.value);
      quantityInput.value = currentValue + 1;
    });
  });
  </script>
</body>
</html>
