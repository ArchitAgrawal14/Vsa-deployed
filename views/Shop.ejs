<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Shop</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/style/shop.css" />
  <style>
.text-bg-primary.p-3 {
    position: fixed;
    top: 75px;
    width: 100%;
    z-index: 999;
    background: linear-gradient(135deg, var(--primary-color, #007bff), var(--secondary-color, #0056b3)) !important;
    padding: 15px 20px;
}
body {
    padding-top: 130px; 
    background-color: aliceblue;
}
#products-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1.5rem;
    padding: 20px;
    margin: 0 auto;
    max-width: 1400px;
}

/* Product card */
.product-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    width: 250px;
    max-width: 100%;
    padding: 1rem;
    background: white;
    border-radius: 10px;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

/* Image styling */
.product-card img {
    width: 100%;
    height: auto;
    border-radius: 8px;
    object-fit: cover;
}

/* Card title */
.product-card h5, .product-card h4 {
    text-align: center;
    margin: 10px 0;
}
.product-card .size-selector {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    flex-wrap: nowrap; 
}

.product-card .size-button {
    border: 2px solid transparent;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
}

.product-card .color-selector {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
}

.product-card .color-button {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    border: 2px solid transparent;
    cursor: pointer;
    transition: all 0.3s ease;
}

.product-card .size-button.selected {
    border: 2px solid #007bff;
    background-color: #f0f0f0;
}

.product-card .color-button.selected {
    border: 2px solid #007bff;
    opacity: 0.8;
}

.product-card .btn.buyNow,
.product-card .btn.addItemsToCart {
    background-color: #007bff;
    border: none;
    color: white;
    font-size: 1rem;
    padding: 10px 15px;
    border-radius: 30px;
    text-transform: uppercase;
    font-weight: bold;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    display: inline-block;
    margin: 10px 5px;
    min-width: 120px;
}

.product-card .btn.buyNow:hover,
.product-card .btn.addItemsToCart:hover {
    background-color: #0056b3;
    transform: translateY(-2px);
}

.product-card .btn.buyNow:active,
.product-card .btn.addItemsToCart:active {
    background-color: #004085;
    transform: translateY(1px);
}


.product-card .button-container {
    text-align: center;
    margin-top: 1rem;
}

#search-sort-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem;
    margin-top: 60px;
    text-align: center;
}

#sort-select {
    width: 100%;
    max-width: 200px;
}
@media (max-width: 1024px) {
    body {
        padding-top: 150px; 
    }

    .text-bg-primary.p-3 {
        top: 90px;
    }

    #products-container {
        gap: 1rem;
        padding-top: 140px;
    }

    .product-card {
        width: 220px;
    }
}

@media (max-width: 768px) {
    body {
        padding-top: 160px; 
    }

    .text-bg-primary.p-3 {
        top: 80px;
    }

    #products-container {
        flex-direction: column;
        align-items: center;
        padding: 10px;
        padding-top: 120px; 
    }

    .product-card {
        width: 90%;
    }

    .product-card .button-container {
        flex-direction: column;
        align-items: center;
    }

    .product-card .btn.buyNow,
    .product-card .btn.addItemsToCart {
        width: 100%;
        margin: 5px 0;
    }
}

@media (max-width: 480px) {
    body {
        padding-top: 170px;
    }

    .text-bg-primary.p-3 {
        top: 70px;
        padding: 10px;
    }

    #products-container {
        padding-top: 120px; 
          }

    .product-card {
        width: 95%;
    }

    .product-card .btn.buyNow,
    .product-card .btn.addItemsToCart {
        font-size: 0.9rem;
        padding: 8px 12px;
    }
}


  </style>
  </head>
  <body style="background-color: aliceblue">
    <%- include("header.ejs") %>
    <div class="shop-headers">
    <header class="p-3 text-bg-primary">
      <div class="container">
        <div
          class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start"
        >
          <a
            href="/"
            class="d-flex align-items-center mb-2 mb-lg-0 text-white text-decoration-none"
          >
            <svg
              class="bi me-2"
              width="40"
              height="32"
              role="img"
              aria-label="Bootstrap"
            >
              <use xlink:href="#bootstrap"></use>
            </svg>
          </a>
          <ol
            class="nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0"
          >
            <li>
              <a href="/Skates" class="nav-link px-2 text-white">Skates</a>
            </li>
            <li>
              <a href="/Wheels" class="nav-link px-2 text-white">Wheels</a>
            </li>
            <li>
              <a href="/Helmets" class="nav-link px-2 text-white">Helmets</a>
            </li>
            <li>
              <a href="/SkinSuits" class="nav-link px-2 text-white"
                >Skin Suits</a
              >
            </li>
            <li>
              <a href="/Accessories" class="nav-link px-2 text-white"
                >Accessories</a
              >
            </li>
          </ol>
          <form
            id="search-form"
            class="col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3"
            role="search"
          >
            <input
              type="search"
              id="search-input"
              class="form-control form-control-dark text-bg-white"
              placeholder="Search for Products..."
              aria-label="Search"
            />
          </form>
          <select id="sort-select" class="form-select form-select-dark ms-3">
            <option value="default">Sort By</option>
            <option value="name">Name</option>
            <option value="price">Price</option>
          </select>
        </div>
      </div>
    </header>
  </div>
    <div id="products-container">
      <% if(items_data && items_data.length > 0) { %> <%
      items_data.forEach((item) => { %>
      <div class="row d-flex justify-content-around">
        <div
          class="card m-5 border-0 product-card"
          style="width: 12rem"
          data-name="<%= item.name %>"
          data-price="<%= item.price %>"
        >
          <a
            href="/productDetails"
            class="detailsOfProduct"
            data-item-type="<%= item.item_type %>"
            data-item-id="<%= item.item_id %>"
          >
            <img
              src="<%= item.img %>"
              class="card-img-top"
              alt="<%= item.name %>"
            />
          </a>
          <div class="card-body">
            <h5 class="card-title"><%= item.name %></h5>
            <h4 class="card-title">â‚¹<%= item.price %></h4>
            <div class="input-group mb-3">
              <div class="input-group-prepend">
                <button
                  class="btn btn-outline-secondary"
                  type="button"
                  id="decrement-btn"
                >
                  -
                </button>
              </div>
              <input
                type="text"
                class="form-control text-center"
                id="quantity-input"
                value="1"
              />
              <div class="input-group-append">
                <button
                  class="btn btn-outline-secondary"
                  type="button"
                  id="increment-btn"
                >
                  +
                </button>
              </div>
            </div>
            <div class="mb-4">
              <div class="size-selector">
                <% item.sizes.forEach((size) => { %>
                <!-- Loop through all sizes -->
                <button
                  class="size-button btn btn-outline-secondary"
                  data-size="<%= size %>"
                >
                  <%= size %>
                </button>
                <% }) %>
              </div>
              <br />
              <div class="color-selector">
                <div
                  class="color-button"
                  style="background-color: #000000"
                  data-color="#000000"
                ></div>
                <div
                  class="color-button"
                  style="background-color: #ff0000"
                  data-color="#FF0000"
                ></div>
                <div
                  class="color-button"
                  style="background-color: #0000ff"
                  data-color="#0000FF"
                ></div>
              </div>
            </div>

            <div class="button-container">
              <a
                href="/CheckOut"
                class="btn btn-primary buyNow"
                data-item-type="<%= item.item_type %>"
                data-item-id="<%= item.item_id %>"
                >Check Out</a
              >
              <a
                href="/AddToCart"
                class="btn btn-primary addItemsToCart"
                data-item-type="<%= item.item_type %>"
                data-item-id="<%= item.item_id %>"
                >Add to cart</a
              >
            </div>
          </div>
        </div>
      </div>
      <% }) %> <% } %>
    </div>
    <%- include("footer.ejs") %>
    <div id="toast-container" class="position-fixed bottom-0 end-0 p-3 ">
      <div
        id="toast"
        class="toast"
        role="alert"
        aria-live="assertive"
        aria-atomic="true"
      >
        <div class="toast-header">
          <strong class="me-auto">Success</strong>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="toast"
            aria-label="Close"
          ></button>
        </div>
        <div class="toast-body">Item successfully added to cart!</div>
      </div>
      <!-- below is the toast for user that are not logged in and are trying to add an item -->
      <div
        id="toast-login"
        class="toast"
        role="alert"
        aria-live="assertive"
        aria-atomic="true"
      >
        <div class="toast-header bg-warning text-dark">
          <strong class="me-auto">Login Required</strong>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="toast"
            aria-label="Close"
          ></button>
        </div>
        <div class="toast-body text-dark">Please log in to continue.</div>
      </div>
    </div>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-pzjw8f+ua7Kw1TIq+8A7V2b3vZ3lOJXfW5JxjZf6eKHeDmt6kG+5GIMkFvV0dPfcJ"
      crossorigin="anonymous"
    ></script>

     <!-- this below is for searching and sorting. -->
    <script>
      document.addEventListener("DOMContentLoaded", function () {
    const searchInput = document.getElementById("search-input");
    const sortSelect = document.getElementById("sort-select");
    const productsContainer = document.getElementById("products-container");
    const productCards = Array.from(document.querySelectorAll(".product-card"));

    function filterProducts() {
        const searchText = searchInput.value.trim().toLowerCase();
        productCards.forEach(card => {
            const productName = card.getAttribute("data-name").toLowerCase();
            const productPrice = card.getAttribute("data-price").toLowerCase();
            
            if (productName.includes(searchText) || productPrice.includes(searchText)) {
                card.style.transition = "opacity 0.3s ease-in-out";
                card.style.display = "flex";
                card.style.opacity = "1";
            } else {
                card.style.transition = "opacity 0.3s ease-in-out";
                card.style.opacity = "0";
                setTimeout(() => {
                    card.style.display = "none";
                }, 300);
            }
        });
    }

    function sortProducts() {
        const sortBy = sortSelect.value;
        let sortedCards = [...productCards];
        
        if (sortBy === "name") {
            sortedCards.sort((a, b) => a.getAttribute("data-name").localeCompare(b.getAttribute("data-name")));
        } else if (sortBy === "price") {
            sortedCards.sort((a, b) => parseFloat(a.getAttribute("data-price")) - parseFloat(b.getAttribute("data-price")));
        }

        productsContainer.innerHTML = "";
        sortedCards.forEach(card => productsContainer.appendChild(card));
    }

    searchInput.addEventListener("input", filterProducts);
    sortSelect.addEventListener("change", sortProducts);
});

    </script>

    <!-- below is the script for (new) add to cart and product details it also handles users when they are not logged in -->
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const addItemsToCartButton =
          document.querySelectorAll(".addItemsToCart");
        const productDetailslink =
          document.querySelectorAll(".detailsOfProduct");

        addItemsToCartButton.forEach((button) => {
          button.addEventListener("click", async (event) => {
            event.preventDefault();
            const item_id = button.getAttribute("data-item-id");
            const item_type = button.getAttribute("data-item-type");
            const quantity = button
              .closest(".card")
              .querySelector("#quantity-input").value;
            const selectedSize = button
              .closest(".card")
              .querySelector(".size-button.selected");
            const selectedColor = button
              .closest(".card")
              .querySelector(".color-button.selected");

            const size = selectedSize
              ? selectedSize.getAttribute("data-size")
              : "M";
            const color = selectedColor
              ? selectedColor.getAttribute("data-color")
              : "#0000FF";

            try {
              const response = await fetch("/AddToCart", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({
                  item_id,
                  item_type,
                  quantity,
                  size,
                  color,
                }),
              });

              const data = await response.json();

              // Check if the response indicates the user is logged in or not
              if (response.status === 401) {
                // Adjusting to check for a 401 Unauthorized status
                const loginToast = new bootstrap.Toast(
                  document.getElementById("toast-login")
                );
                loginToast.show();
              } else if (data.success) {
                const successToast = new bootstrap.Toast(
                  document.getElementById("toast")
                );
                successToast.show();
              } else {
                console.log("Unexpected response:", data);
              }

              console.log("Response from server:", data);
            } catch (error) {
              console.log("Failed to add item", error);
            }
          });
        });
        // Handle size selection
        const sizeButtons = document.querySelectorAll(".size-button");
        sizeButtons.forEach((button) => {
          button.addEventListener("click", () => {
            // Remove 'selected' class from all size buttons
            sizeButtons.forEach((b) => b.classList.remove("selected"));
            // Add 'selected' class to the clicked button
            button.classList.add("selected");
          });
        });

        // Handle color selection
        const colorButtons = document.querySelectorAll(".color-button");
        colorButtons.forEach((button) => {
          button.addEventListener("click", () => {
            // Remove 'selected' class from all color buttons
            colorButtons.forEach((b) => b.classList.remove("selected"));
            // Add 'selected' class to the clicked button
            button.classList.add("selected");
          });
        });

        productDetailslink.forEach((link) => {
          link.addEventListener("click", async (event) => {
            event.preventDefault();
            const item_id = link.getAttribute("data-item-id");
            const item_type = link.getAttribute("data-item-type");
            try {
              const response = await fetch("/productDetails", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({ item_id, item_type }),
              });

              const contentType = response.headers.get("content-type");
              if (contentType && contentType.includes("application/json")) {
                const data = await response.json();
                console.log("Item data received from server:", data);

                if (data.success) {
                  window.location.href = `/productDetails?item_id=${item_id}&item_type=${item_type}`;
                } else {
                  alert("Failed to load item update page.");
                }
              } else {
                const html = await response.text();
                document.open();
                document.write(html);
                document.close();
              }
            } catch (error) {
              console.error("Failed to fetch product details", error);
            }
          });
        });
      });
    </script>

    <!-- Below is the script for sending data to server side for checkout page -->
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const checkoutButton = document.querySelectorAll(".buyNow"); // Checkout buttons

        checkoutButton.forEach((button) => {
          button.addEventListener("click", async (event) => {
            event.preventDefault(); // Prevent the default link behavior

            // Extract data from the button's attributes
            const item_id = button.getAttribute("data-item-id");
            const item_type = button.getAttribute("data-item-type");
            const quantity = button
              .closest(".card")
              .querySelector("#quantity-input").value;

            try {
              const response = await fetch("/CheckOut", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({ item_id, item_type, quantity }),
              });

              if (response.status === 401) {
                // Unauthorized
                console.log("User not logged in. Redirecting to login page...");
                window.location.href = "/newLogin";
                return;
              }

              const data = await response.json();

              if (data.success) {
                // Successful checkout
                console.log("Checkout successful!");
                // If successful, we can redirect the user to the checkout page and pass the items
                window.location.href = `/checkOutPage?item_id=${item_id}&item_type=${item_type}&quantity=${quantity}`;
              } else if (!data.success) {
                console.log(
                  data.message || "An error occurred during checkout."
                );
              } else {
                console.log("Unexpected response:", data);
              }
            } catch (error) {
              console.log("Checkout failed", error);
            }
          });
        });
      });
    </script>

    <!-- This below script is for increment and decrement of quantity of items -->
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const decrementButton = document.getElementById("decrement-btn");
        const incrementButton = document.getElementById("increment-btn");
        const quantityInput = document.getElementById("quantity-input");

        decrementButton.addEventListener("click", function () {
          let currentValue = parseInt(quantityInput.value);
          if (currentValue > 1) {
            quantityInput.value = currentValue - 1;
          }
        });

        incrementButton.addEventListener("click", function () {
          let currentValue = parseInt(quantityInput.value);
          quantityInput.value = currentValue + 1;
        });
      });
    </script>
  </body>
</html>
